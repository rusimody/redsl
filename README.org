#+TITLE: redsl
#+OPTIONS: toc:nil
* Intro
is a dsl for re's (regexps).
ie You can put the re into a file along with postprocessors for named subgroups 
through a postprocessor dict =postprocessors=
* Usage
** Inside python
#+BEGIN_SRC python
>>> re = """
... (?P<a_num>    [0-9]*)   # Get an integer
... (?P<flag>     f?    )    # Followed by an optional 'f'
... """

>>> m=redsl(re, {'a_num' : int, 'flag': bool})
>>> m("123f")
{'a_num': 123, 'flag': True}
>>> 
>>> m("123")
{'a_num': 123, 'flag': False}
>>> m("f")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "redsl.py", line 18, in redslcurried
    mapped_dpp = {k : ppers[k](mapped_d[k])  for k in mapped_d}
  File "redsl.py", line 18, in <dictcomp>
    mapped_dpp = {k : ppers[k](mapped_d[k])  for k in mapped_d}
ValueError: invalid literal for int() with base 10: ''
#+END_SRC

OOPS!!\\
Not * but +
#+BEGIN_SRC python
>>> rexp = """
... (?P<a_num>    [0-9]+)   # Get an integer
... (?P<flag>     f?    )    # Followed by an optional 'f'
... """
>>> m=redsl(rexp, {'a_num' : int, 'flag': bool})
>>> m("f")
>>>
#+END_SRC
The nothing that you see is a =None= :-)
** At shell
#+BEGIN_SRC shell
$ cat repost.py
from collections import defaultdict
seriesmap = defaultdict(lambda : "No series type",
                        {'.':"Plain", '-':"Preferred", '+':"Warrant"})
postprocessors = {'issued' : bool, 'sertype': seriesmap, 'rights':bool}

rexp = r"""
# DSL (instantiation) for describing NYSE symbology
# From https://www.nyse.com/publicdocs/nyse/markets/amex-options/ArcaDirectAPISpecVersion4_1.pdf
# Symbology table pg 12

(?=^.+$)				# There better be something >=1
^					# From beginning
(?P<scrip>		[A-Z]*)		# The base scrip
(?P<sertype>		[.+-])?		# Series type char
(?P<series>		[A-QS-Z])?	# Series
(?P<rights>		[R])?		# Series
(?P<issued>		[#])?		# issued char indicator
$					# Thats all (there should be!)
"""
$ 
#+END_SRC

Then run it
#+BEGIN_SRC shell
$ ./redsl.py IBM.A
{'series': 'A', 'scrip': 'IBM', 'issued': False, 'sertype': 'Plain', 'rights': False}
#+END_SRC


